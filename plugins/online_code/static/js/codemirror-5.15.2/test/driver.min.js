var tests=[],filters=[],allNames=[];function Failure(a){this.message=a}Failure.prototype.toString=function(){return this.message};function indexOf(d,a){if(d.indexOf){return d.indexOf(a)}for(var b=0,c=d.length;b<c;++b){if(d[b]==a){return b}}return -1}function test(c,e,a){var b=c;var d=2;while(indexOf(allNames,c)!==-1){c=b+"_"+d;d++}allNames.push(c);tests.push({name:c,func:e,expectedFail:a});return c}var namespace="";function testCM(b,d,c,a){return test(namespace+b,function(){var f=document.getElementById("testground"),e=window.cm=CodeMirror(f,c);var g=false;try{d(e);g=true}finally{if(!g||verbose){f.style.visibility="visible"}else{f.removeChild(e.getWrapperElement())}}},a)}function runTests(c){var a=0;function b(k){for(;;){if(k===tests.length){running=false;return c("done")}var n=tests[k],p=false;if(filters.length){p=true;for(var g=0;g<filters.length;g++){if(n.name.match(filters[g])){p=false}}}if(p){c("skipped",n.name,q);k++}else{break}}var l=n.expectedFail,d=+new Date,f=false;try{var q=n.func()}catch(m){f=true;if(l){c("expected",n.name)}else{if(m instanceof Failure){c("fail",n.name,m.message)}else{var o=/(?:\bat |@).*?([^\/:]+):(\d+)/.exec(m.stack);if(o){console.log(m.stack)}c("error",n.name,m.toString()+(o?" ("+o[1]+":"+o[2]+")":""))}}}if(!f){if(l){c("fail",n.name,q||"expected failure, but passed")}else{c("ok",n.name,q)}}if(!quit){var h=0;a+=(+new Date)-d;if(a>500){a=0;h=50}setTimeout(function(){b(k+1)},h)}else{running=false;return null}}b(0)}function label(b,a){if(a){return b+" ("+a+")"}return b}function eq(d,c,e){if(d!=c){throw new Failure(label(d+" != "+c,e))}}function near(d,c,e,f){if(Math.abs(d-c)>e){throw new Failure(label(d+" is not close to "+c+" ("+e+")",f))}}function eqPos(d,c,f){function e(a){return"{line:"+a.line+",ch:"+a.ch+"}"}if(d==c){return}if(d==null){throw new Failure(label("comparing null to "+e(c),f))}if(c==null){throw new Failure(label("comparing "+e(d)+" to null",f))}if(d.line!=c.line||d.ch!=c.ch){throw new Failure(label(e(d)+" != "+e(c),f))}}function is(b,c){if(!b){throw new Failure(label("assertion failed",c))}}function countTests(){if(!filters.length){return tests.length}var d=0;for(var c=0;c<tests.length;++c){var b=tests[c].name;for(var a=0;a<filters.length;a++){if(b.match(filters[a])){++d;break}}}return d}function parseTestFilter(a){if(/_\*$/.test(a)){return new RegExp("^"+a.slice(0,a.length-2),"i")}else{return new RegExp(a,"i")}};